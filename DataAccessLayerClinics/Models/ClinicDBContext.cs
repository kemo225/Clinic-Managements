// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using _DataAccessLayerClinics.Models;
using Microsoft.EntityFrameworkCore;

namespace _3_DataAccessLayerClinics.Models;

public partial class ClinicDBContext : DbContext
{
    
   

    public virtual DbSet<Booking> Bookings { get; set; }

    public virtual DbSet<Doctor> Doctors { get; set; }

    public virtual DbSet<DoctorSchedule> DoctorSchedules { get; set; }

    public virtual DbSet<Nurse> Nurses { get; set; }

    public virtual DbSet<Patient> Patients { get; set; }

    public virtual DbSet<Payment> Payments { get; set; }

    public virtual DbSet<Review> Reviews { get; set; }

    public virtual DbSet<ScheduleDoctorMapping> ScheduleDoctorMappings { get; set; }

    public virtual DbSet<Specialty> Specialties { get; set; }
    public virtual DbSet<BookingDeletes>BookingsDeletes { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer("Data Source=.;Initial Catalog=ClinicDB;Integrated Security=True;Encrypt=False");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Booking>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Bookings__3214EC27CDF1AB5B");

            entity.Property(e => e.DetectionCost).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.CreatedByNurse).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.CreatedByNurseID)
                .HasConstraintName("FK_Bookings_Nurses");

            entity.HasOne(d => d.Doctor).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.DoctorID)
                .HasConstraintName("FK__Bookings__Doctor__4E88ABD4");

            entity.HasOne(d => d.Patient).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.PatientID)
                .HasConstraintName("FK__Bookings__Patien__4D94879B");
        });

        modelBuilder.Entity<Doctor>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Doctors__3214EC272C30FD7C");

            entity.Property(e => e.Address).HasMaxLength(200);
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.FirstName).HasMaxLength(50);
            entity.Property(e => e.Gender).HasMaxLength(10);
            entity.Property(e => e.LastName).HasMaxLength(50);
            entity.Property(e => e.Phone).HasMaxLength(20);
            entity.Property(e => e.Salt)
                .HasMaxLength(100)
                .IsFixedLength();
            entity.Property(e => e.SecondName).HasMaxLength(50);
            entity.Property(e => e.ThirdName).HasMaxLength(50);
            entity.Property(e => e.Username)
                .HasMaxLength(100)
                .IsFixedLength();
            entity.Property(e => e.password)
                .HasMaxLength(100)
                .IsFixedLength();

            entity.HasOne(d => d.Nurse).WithMany(p => p.Doctors)
                .HasForeignKey(d => d.NurseID)
                .HasConstraintName("FK_Doctors_Nurses");

            entity.HasOne(d => d.Specialty).WithMany(p => p.Doctors)
                .HasForeignKey(d => d.SpecialtyID)
                .HasConstraintName("FK__Doctors__Special__3C69FB99");
        });

        modelBuilder.Entity<DoctorSchedule>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__DoctorSc__3214EC27D3AD828A");

            entity.ToTable("DoctorSchedule");

            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.StartTime).HasColumnType("datetime");
        });

        modelBuilder.Entity<Nurse>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Nurses__3214EC271C2B6E6B");

            entity.Property(e => e.Address).HasMaxLength(200);
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.FirstName).HasMaxLength(50);
            entity.Property(e => e.Gender).HasMaxLength(10);
            entity.Property(e => e.LastName).HasMaxLength(50);
            entity.Property(e => e.Password)
                .HasMaxLength(100)
                .IsFixedLength();
            entity.Property(e => e.Phone).HasMaxLength(20);
            entity.Property(e => e.Salt)
                .HasMaxLength(100)
                .IsFixedLength();
            entity.Property(e => e.SecondName).HasMaxLength(50);
            entity.Property(e => e.ThirdName).HasMaxLength(50);
            entity.Property(e => e.UserName)
                .HasMaxLength(100)
                .IsFixedLength();
        });

        modelBuilder.Entity<Patient>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Patients__3214EC27AF2CDC74");

            entity.Property(e => e.Address).HasMaxLength(200);
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.FirstName).HasMaxLength(50);
            entity.Property(e => e.Gender).HasMaxLength(10);
            entity.Property(e => e.LastName).HasMaxLength(50);
            entity.Property(e => e.Phone).HasMaxLength(20);
            entity.Property(e => e.SecondName).HasMaxLength(50);

            entity.Property(e => e.ThirdName).HasMaxLength(50);
        });

        modelBuilder.Entity<Payment>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Payments__3214EC27008BDE01");

            entity.Property(e => e.DetectionCost).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.PaymentMethod).HasMaxLength(50);

            entity.HasOne(d => d.Booking).WithMany(p => p.Payments)
                .HasForeignKey(d => d.BookingID)
                .HasConstraintName("FK__Payments__Bookin__5165187F");
        });

        modelBuilder.Entity<Review>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Reviews__3214EC27CC92E2B4");

            entity.HasIndex(e => e.DoctorID, "IX_Reviews_DoctorID");

            entity.Property(e => e.ReviewDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Booking).WithMany(p => p.Reviews)
                .HasForeignKey(d => d.BookingID)
                .HasConstraintName("FK__Reviews__Booking__5535A963");

            entity.HasOne(d => d.Doctor).WithMany(p => p.Reviews).HasForeignKey(d => d.DoctorID);

            entity.HasOne(d => d.Patient).WithMany(p => p.Reviews)
                .HasForeignKey(d => d.PatientID)
                .HasConstraintName("FK__Reviews__Patient__5629CD9C");
        });

        modelBuilder.Entity<ScheduleDoctorMapping>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Schedule__3214EC27F6B94BF9");

            entity.ToTable("ScheduleDoctorMapping");

            entity.Property(e => e.DetectionCost).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Doctor).WithMany(p => p.ScheduleDoctorMappings)
                .HasForeignKey(d => d.DoctorID)
                .HasConstraintName("FK__ScheduleD__Docto__49C3F6B7");

            entity.HasOne(d => d.DoctorSchedule).WithMany(p => p.ScheduleDoctorMappings)
                .HasForeignKey(d => d.DoctorScheduleID)
                .HasConstraintName("FK__ScheduleD__Docto__4AB81AF0");
        });

        modelBuilder.Entity<Specialty>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Specialt__3214EC271470B744");

            entity.HasIndex(e => e.Name, "UQ__Specialt__737584F656FE1CC5").IsUnique();

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}